package picpro;

import java.awt.image.BufferedImage;

/**
 *
 * @author Ryan DeYoung
 */
public class Sepia {
    
    // declaration of the buffered images
    public BufferedImage inputImage;
    static BufferedImage output;
    
    /**
     * @param passedImage
     */
    public Sepia (BufferedImage passedImage) {
        // sets the input image to the passed image
        this.inputImage = passedImage;
        
        // variable to hold th width and height of input image                
        int width = inputImage.getWidth();
        int height = inputImage.getHeight();
        
        // variable to hold the current pixel number
        int pixel;
        
        // variable to hold the each component of each pixel
        int  red, green, blue;
        // variables that will hold the sepia color of each pixel component
        int sepiaRed, sepiaGreen, sepiaBlue;
        // inialization of the output buffered image     
        output = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        
        // for loop to go through input image and set the output image to sepia
        for(int i = 0; i < width; i++){
            for(int j = 0; j < height; j++){
                // sets the pixel to the current input image pixel
                pixel = inputImage.getRGB(i, j);
                
                // sets each component to match its corresponding pixel component
                red = (pixel>>16) &0xff;
                green = (pixel>>8) &0xff;
                blue = pixel &0xff;
                
                // the math conversions to change each color to its sepia version
                sepiaRed = (int)(0.393 * red + 0.769 * green + 0.189 * blue);
                sepiaGreen = (int)(0.349 * red + 0.686 * green + 0.168 * blue);
                sepiaBlue = (int)(0.272 * red + 0.534 * green + 0.131 * blue);
                
                // comparisons done to make sure none of the colors are over 255
                // then depending of the situation sets each component color
                if (sepiaRed > 255){
                    red= 255;
                }
                else{
                    red = sepiaRed;
                }
                if (sepiaGreen > 255){
                    green = 255;
                }
                else{
                    green = sepiaGreen;
                }
                
                if (sepiaBlue > 255){
                    blue = 255;
                }
                else{
                    blue = sepiaBlue;
                }
                
                // sets pixel to equal the new sepia color
                pixel = (red<<16) | (green<<8) | blue;
                
                // sets the output pixel color
                output.setRGB(i, j, pixel);
            }    
        }          
    }
    
    // method to return the newly made image to main
    public static BufferedImage returnImage(){
        return output;
    }
}
